name: Run ETF Strategy Only

on:
  push:
    branches:
      - main
    paths:
      - 'ETF_screened.py'
  workflow_dispatch:

jobs:
  strategy-only:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas tushare numpy oss2

      - name: Download latest data artifact
        uses: actions/download-artifact@v3
        with:
          name: etf-reports
          path: .
          
      - name: Run strategy and upload to OSS
        env:
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
          ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          OSS_ENDPOINT: ${{ secrets.OSS_ENDPOINT }}
          OSS_BUCKET_NAME: ${{ secrets.OSS_BUCKET_NAME }}
        run: |
          python ETF_screened.py
          python upload_to_oss.py

      - name: Create and publish a GitHub Release
        if: success()
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "report-$(date +'%Y%m%d')"
          name: "ETF Metrics Report $(date +'%Y-%m-%d')"
          body: |
            Daily ETF metrics and screener reports.
            
            This release contains the latest data from the ETF monitoring model.
          files: |
            etf_metrics_daily_report.csv
            etf_screener_final_report.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload new reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: etf-reports
          path: |
            etf_metrics_daily_report.csv
            etf_screener_final_report.csv
