name: Update All ETF Data

on:
  push:
    branches:
      - main
    paths:
      - 'ETF.py'
      - 'ETF_screened.py'
      - 'upload_to_oss.py'
  workflow_dispatch:
  schedule:
    - cron: '10 9 * * *'

jobs:
  full-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas tushare numpy oss2

      - name: Run data generation and strategy
        env:
          TUSHARE_TOKEN: ${{ secrets.TUSHARE_TOKEN }}
        run: |
          python ETF.py
          python ETF_screened.py

      - name: Upload reports to OSS
        env:
          ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          OSS_ENDPOINT: ${{ secrets.OSS_ENDPOINT }}
          OSS_BUCKET_NAME: ${{ secrets.OSS_BUCKET_NAME }}
        run: |
          python upload_to_oss.py

      - name: Create release tag
        id: create_tag
        run: |
          DATE=$(date +'%Y%m%d%H%M')
          echo "tag=v$DATE" >> $GITHUB_ENV
          echo "release_name=Daily ETF Report $DATE" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: ${{ env.release_name }}
          draft: false
          prerelease: true

      - name: Upload ETF Metrics Report
        id: upload_metrics_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./etf_metrics_daily_report.csv
          asset_name: etf_metrics_daily_report.csv
          asset_content_type: text/csv

      - name: Upload ETF Screener Report
        id: upload_screener_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./etf_screener_final_report.csv
          asset_name: etf_screener_final_report.csv
          asset_content_type: text/csv
